"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[144],{4639:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-f2de9dce",path:"/assets/vue/sourceCodeAnalysis/2.%E7%94%9F%E6%88%90%E7%BC%93%E5%AD%98%E5%87%BD%E6%95%B0.html",title:"生成缓存函数",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:"生成缓存函数",description:"生成缓存函数"},excerpt:"",headers:[{level:2,title:"缓存函数",slug:"缓存函数",children:[]}],filePathRelative:"assets/vue/sourceCodeAnalysis/2.生成缓存函数.md",git:{updatedTime:null,contributors:[]}}},3894:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h2 id="缓存函数" tabindex="-1"><a class="header-anchor" href="#缓存函数" aria-hidden="true">#</a> 缓存函数</h2><p>vue中工具方法 - 生成缓存函数，避免大量的创建新的函数导致性能损耗，所以直接把函数缓存到一个cached对象里面，存在内存中，省去了创建的时间，当然缺点就是消耗了内存，这是典型的牺牲空间降低时间损耗</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">cached</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> cache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 所有生成的函数在首次创建都会被缓存，都会存储到这个cahce对象里面</span>\n    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> hit <span class="token operator">=</span> cache<span class="token punctuation">[</span>str<span class="token punctuation">]</span>\n        <span class="token keyword">return</span> hit <span class="token operator">||</span> <span class="token punctuation">(</span> cache<span class="token punctuation">[</span>str<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>完。。。</p>',4),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);