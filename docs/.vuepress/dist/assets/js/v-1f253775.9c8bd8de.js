"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3946],{2671:(e,l,t)=>{t.r(l),t.d(l,{data:()=>i});const i={key:"v-1f253775",path:"/assets/vue/sourceCodeAnalysis/1.%E5%AD%A6%E4%B9%A0%E7%AE%80%E4%BB%8B.html",title:"学习简介",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:"学习简介",description:"学习简介"},excerpt:"",headers:[{level:2,title:"学习之前",slug:"学习之前",children:[]},{level:2,title:"学习心得",slug:"学习心得",children:[]}],filePathRelative:"assets/vue/sourceCodeAnalysis/1.学习简介.md",git:{updatedTime:null,contributors:[]}}},7791:(e,l,t)=>{t.r(l),t.d(l,{default:()=>r});const i=(0,t(6252).uE)('<h2 id="学习之前" tabindex="-1"><a class="header-anchor" href="#学习之前" aria-hidden="true">#</a> 学习之前</h2><p>vue（v2）在我眼中就像一棵大树，生命周期自顶向下贯穿始终，所有扩展和功能都是这颗树的延伸和扩展，使得这颗大树具有很大的规模，有优点，也有缺点，这里我们不做评价，只学习v2版本的源码</p><h2 id="学习心得" tabindex="-1"><a class="header-anchor" href="#学习心得" aria-hidden="true">#</a> 学习心得</h2><p>众所周知，源码难啃，难在没有思路，没有头绪。如果知识面不够的话，学起来就更难了，借用网上的一句话就是（vue源码学习，从入门到放弃），哈哈，的确是这样子的，我以前也是，看了下源码，哎呀，这是什么鬼，看不懂。</p><p>但是找到方式方法，其实就简单许多，相对来说，如果基础很扎实，知识面很广，将事半功倍</p><p>比如：</p><blockquote><ol><li>你知道工厂模式么</li><li>你知道原型，原型链</li><li>你知道闭包么</li><li>你知道函数柯里化么</li><li>你知道Object.defineProperty么</li><li>你会正则么</li></ol></blockquote><p>当然不止这些，vue源码是一个很优秀的框架，被广大开发者推崇</p><p>总结： 通过源码学习，我们能不断的接触到在业务中使用不到的技术，但是真的能够提高我们的编码水平，逻辑思维，和更好的设计思维，当然还有各种性能优化的技巧</p>',9),a={},r=(0,t(3744).Z)(a,[["render",function(e,l){return i}]])},3744:(e,l)=>{l.Z=(e,l)=>{for(const[t,i]of l)e[t]=i;return e}}}]);