"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6007],{2294:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e={key:"v-3b706387",path:"/assets/other/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F%E7%9A%84.html",title:"乱七八糟的",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:"乱七八糟的",description:"乱七八糟的各种问题记录"},excerpt:"",headers:[{level:2,title:"1. pm2部署node服务，链接不上",slug:"_1-pm2部署node服务-链接不上",children:[]},{level:2,title:"2. npm install 报错",slug:"_2-npm-install-报错",children:[]},{level:2,title:"3. 小皮面板 - 跑java web（jar或者war）",slug:"_3-小皮面板-跑java-web-jar或者war",children:[]}],filePathRelative:"assets/other/乱七八糟的.md",git:{updatedTime:164121974e4,contributors:[{name:"邓占伟",email:"332877552@qq.com",commits:1}]}}},9520:(a,n,s)=>{s.r(n),s.d(n,{default:()=>t});const e=(0,s(6252).uE)('<h2 id="_1-pm2部署node服务-链接不上" tabindex="-1"><a class="header-anchor" href="#_1-pm2部署node服务-链接不上" aria-hidden="true">#</a> 1. pm2部署node服务，链接不上</h2><p>这里只总结我遇到的 1 域名是否解析成功 2 服务器是否开通该端口的安全组 3 服务器端口是否被占用 4 确认node是否正常运行</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>命令： <span class="token function">ps</span> -aux <span class="token operator">|</span> <span class="token function">grep</span> node\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>5 检查端口情况</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>命令： <span class="token function">netstat</span> -anp <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">8888</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>6 检查服务器是否开启了防护墙</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>命令： iptables -L -n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>7 放行服务端使用的端口，比如方形3000</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>iptables -I INPUT -p tcp --dport <span class="token number">3000</span> -j ACCEPT\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_2-npm-install-报错" tabindex="-1"><a class="header-anchor" href="#_2-npm-install-报错" aria-hidden="true">#</a> 2. npm install 报错</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fatal<span class="token operator">:</span> unable to access <span class="token string">&#39;https://github.com/xxx&#39;</span><span class="token operator">:</span> OpenSSL SSL_connect<span class="token operator">:</span> <span class="token constant">SSL_ERROR_SYSCALL</span> <span class="token keyword">in</span> connection to github<span class="token punctuation">.</span>com<span class="token operator">:</span><span class="token number">443</span> <span class="token punctuation">[</span>duplicate<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>没错就是题目的报错信息，重装系统也没用，看题目的大概意思就是 访问的git地址不可用 链接超时，所以我的第一想法就是网络设置，是不是开代理了，导致链接不上git。 经过排查（碰巧哈，这纯粹碰巧，那个出问题的小伙伴的网络设置也有问题，呜呜呜，碰巧解决了问题）</p><p>回到最初的问题，那么没有网络设置问题的电脑怎么解决这个问题呢，起始很简单，配置一下git环境就行了（说白了，就是git的配置问题，不是node或者npm的环境问题） 配置如下：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> config --global --unset-all remote.origin.proxy\n\n<span class="token function">git</span> config --global http.sslVerify <span class="token boolean">false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这两句话放上去就ok了</p><h2 id="_3-小皮面板-跑java-web-jar或者war" tabindex="-1"><a class="header-anchor" href="#_3-小皮面板-跑java-web-jar或者war" aria-hidden="true">#</a> 3. 小皮面板 - 跑java web（jar或者war）</h2><h4 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h4><p>服务器，并安装好小皮面板（也就是phpStudy） 准备好jar包或者war包</p><h4 id="war包部署" tabindex="-1"><a class="header-anchor" href="#war包部署" aria-hidden="true">#</a> war包部署</h4><ol><li>小皮面板后台 -&gt; 软件管理 -&gt; 安装JDK和tomcat，并启动JDK和tomcat</li><li>小皮面板 -&gt; 新建FTP -&gt; 连接上FTP，将war包放到tomcat的webapps目录下，就可以内网访问了，如果想要外网访问，打开响应端口就可以（tomcat的端口）</li><li>如果想用80端口，但是tomcat一般不是80端口，可以安装nginx，做一个代理，直接在localhosy / {} 里面加入 proxy_pass http://127.0.0.1:8080 (8080端口是你的tomcat的端口号)</li><li>并启动nginx，就可以了，如果有域名可以绑定上域名</li></ol><h4 id="jar包部署" tabindex="-1"><a class="header-anchor" href="#jar包部署" aria-hidden="true">#</a> jar包部署</h4><p>jar包部署比较麻烦，小皮面板只是辅助，也可以不用小皮面板，直接用putty链接到你的服务器</p><ol><li>链接到服务器，安装jdk和tomcat，配置好（JDK的）环境变量，配置方法参考https://blog.csdn.net/jiahao1186/article/details/89532180</li><li>安装nohup，（鸡鸡的，我安装的时候一直拼错，拼成了nohub）安装方法百度，这个也需要配置环境变量</li><li>然后就和war包的一样了，用ftp将jar包放到一个位置(你觉得放哪合适就放哪吧)</li><li>启动 nohup java -jar 包名.jar &amp;</li><li>如果想要外网访问 也可以安装nginx做代理转发</li></ol><h4 id="npm-yarn-设置淘宝镜像" tabindex="-1"><a class="header-anchor" href="#npm-yarn-设置淘宝镜像" aria-hidden="true">#</a> npm yarn 设置淘宝镜像</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\n<span class="token comment"># 淘宝镜像</span>\n<span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org\n<span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org\n\n<span class="token comment"># 原镜像</span>\n<span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmjs.org\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',25),l={},t=(0,s(3744).Z)(l,[["render",function(a,n){return e}]])},3744:(a,n)=>{n.Z=(a,n)=>{for(const[s,e]of n)a[s]=e;return a}}}]);