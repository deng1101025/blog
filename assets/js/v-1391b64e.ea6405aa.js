"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9898],{4636:(e,i,l)=>{l.r(i),l.d(i,{data:()=>t});const t={key:"v-1391b64e",path:"/assets/vue/sourceCodeAnalysis/2.vue%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html",title:"一切的开始",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:"一切的开始",description:"一切的开始 - 生命周期"},excerpt:"",headers:[{level:2,title:"一切的开始",slug:"一切的开始",children:[]},{level:2,title:"生命周期",slug:"生命周期",children:[]}],filePathRelative:"assets/vue/sourceCodeAnalysis/2.vue的生命周期.md",git:{updatedTime:164121974e4,contributors:[{name:"邓占伟",email:"332877552@qq.com",commits:1}]}}},9560:(e,i,l)=>{l.r(i),l.d(i,{default:()=>a});const t=(0,l(6252).uE)('<h2 id="一切的开始" tabindex="-1"><a class="header-anchor" href="#一切的开始" aria-hidden="true">#</a> 一切的开始</h2><p>上一章说，学习思路很重要，对初学者来说，源码像一团乱麻，越看越看不懂，主要是你因为没有一个抽丝剥茧的思路，接下来我们就从vue的生命周期开始，生命周期就想一团乱麻中的一个线头，抓住这个线头进行抽丝剥茧，一步一步将vue的整个流程弄清楚</p><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h2><ol start="0"><li>初始化</li><li>beforeCreate之前</li><li>beforeCreate之后</li><li>created之前</li><li>created之后</li><li>beforeMount之前</li><li>beforeMount之后</li><li>mounted之前</li><li>mounted之后</li><li>beforeUpdate之前</li><li>beforeUpdate之后</li><li>updated之前</li><li>updated之后</li><li>beforeDestroy之前</li><li>beforeDestroy之后</li><li>destroyed之前</li><li>destroyed之后</li></ol><p>\b\b看到这里有人要问了，怎么不一样，是的，因为在每个生命周期的前后都有各种逻辑处理，而这些逻辑处理都是需要学习的</p><p>// activated deactivated errorCaptured serverPrefetch</p>',6),r={},a=(0,l(3744).Z)(r,[["render",function(e,i){return t}]])},3744:(e,i)=>{i.Z=(e,i)=>{for(const[l,t]of i)e[l]=t;return e}}}]);