"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5129],{9162:(s,e,a)=>{a.r(e),a.d(e,{data:()=>n});const n={key:"v-40e0cb6e",path:"/assets/other/git%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E4%B8%8D%E5%90%8C%E5%BA%93.html",title:"git合并两个不同库",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:"git合并两个不同库",description:"git合并两个不同库"},excerpt:"",headers:[{level:3,title:"第一步. 下载需要合并的分支",slug:"第一步-下载需要合并的分支",children:[]},{level:3,title:"第二步. 添加需要合并远程仓库",slug:"第二步-添加需要合并远程仓库",children:[]},{level:3,title:"第三步. 把base远程仓库中数据抓取到本仓库",slug:"第三步-把base远程仓库中数据抓取到本仓库",children:[]},{level:3,title:"第四步. checkount切换到base分支上，命名为 asf",slug:"第四步-checkount切换到base分支上-命名为-asf",children:[]},{level:3,title:"第五步. 合并",slug:"第五步-合并",children:[]}],filePathRelative:"assets/other/git合并两个不同库.md",git:{updatedTime:164121974e4,contributors:[{name:"邓占伟",email:"332877552@qq.com",commits:1}]}}},2335:(s,e,a)=>{a.r(e),a.d(e,{default:()=>t});const n=(0,a(6252).uE)('<p>第一步. 下载需要合并的分支 第二步. 添加需要合并远程仓库 第三步. 把base远程仓库中数据抓取到本仓库 第四步. checkount切换到base分支上，命名为 asf 第五步. 合并</p><p>fatal: refusing to merge unrelated histories 错误 总结：(引用学习文章的总结)</p><p>场景：有一个系统基础脚手架，很多系统都在这个脚手架基础上开发，但是有时候这个脚手架也会更新迭代，这个时候需要把脚手架合并到已经开发系统中来，而且脚手架和现有系统不再一个Git仓库中，这时候需要合并两个不同的仓库的代码。</p><h3 id="第一步-下载需要合并的分支" tabindex="-1"><a class="header-anchor" href="#第一步-下载需要合并的分支" aria-hidden="true">#</a> 第一步. 下载需要合并的分支</h3><p>要把需要合并的分支代码 clone到本地。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> clone https://gitee.com/alingfly/ASF_Test.git\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="第二步-添加需要合并远程仓库" tabindex="-1"><a class="header-anchor" href="#第二步-添加需要合并远程仓库" aria-hidden="true">#</a> 第二步. 添加需要合并远程仓库</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> remote <span class="token function">add</span> base https://github.com/AClumsy/ASF.git\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>将 base作为远程仓库，添加到 本地仓库(origin)中，设置别名为 base(自定义，这里我是为了方便区分仓库名)</p><h3 id="第三步-把base远程仓库中数据抓取到本仓库" tabindex="-1"><a class="header-anchor" href="#第三步-把base远程仓库中数据抓取到本仓库" aria-hidden="true">#</a> 第三步. 把base远程仓库中数据抓取到本仓库</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> fetch base\n  From https://github.com/AClumsy/ASF\n    * <span class="token punctuation">[</span>new branch<span class="token punctuation">]</span>      master     -<span class="token operator">&gt;</span> base/master\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="第四步-checkount切换到base分支上-命名为-asf" tabindex="-1"><a class="header-anchor" href="#第四步-checkount切换到base分支上-命名为-asf" aria-hidden="true">#</a> 第四步. checkount切换到base分支上，命名为 asf</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> checkout -b asf base/master\n  Switched to a new branch <span class="token string">&#39;asf&#39;</span>\n  Branch <span class="token string">&#39;asf&#39;</span> <span class="token builtin class-name">set</span> up to track remote branch <span class="token string">&#39;master&#39;</span> from <span class="token string">&#39;base&#39;</span><span class="token builtin class-name">.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#查看一下所有分支</span>\n$ <span class="token function">git</span> branch \n* asf\n  asf_test\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>由于我们需要把asf分支合并到asf_test分支中去，我们在切换到asf_test分支。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> checkout asf_test\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="第五步-合并" tabindex="-1"><a class="header-anchor" href="#第五步-合并" aria-hidden="true">#</a> 第五步. 合并</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> merge asf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>合并完成之后会出现很多冲突，需要在本地代码中解决冲突，然后在提交到ASF_Test中去。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> push origin asf_test //上传到远程库\nfatal: refusing to merge unrelated histories 错误\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在执行 merge 合并的时候出现 fatal: refusing to merge unrelated histories 错误。这个错误可能会在 git pull 或者 git push 中都有可能会遇到，这是因为两个分支没有取得关系。 解决方案 在操作命令后面加 --allow-unrelated-histories</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">git</span> merge asf --allow-unrelated-histories\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>总结：(引用学习文章的总结) 大致思路是伪造远程的asf仓库为asf_test的一个分支，然后合并进来； 若是文件有冲突、或要建立子目录，建议在asf中先解决，再进行如上操作。</p><p>出自</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>https://www.cnblogs.com/lfzm/p/10681412.html\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',25),l={},t=(0,a(3744).Z)(l,[["render",function(s,e){return n}]])},3744:(s,e)=>{e.Z=(s,e)=>{for(const[a,n]of e)s[a]=n;return s}}}]);